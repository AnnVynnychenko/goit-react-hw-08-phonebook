{"version":3,"file":"static/js/739.3d214c8f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/filterSelectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/PhoneBook/PhoneBook.module.css?b449","components/PhoneBook/PhoneBook.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport css from '../../sharedStyles.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsFetchApi';\nimport { useContact } from 'hook';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { contacts } = useContact();\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const ifNameTaken = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (ifNameTaken) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.formContainer} onSubmit={formSubmitHandler}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.formBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"overflow\":\"ContactList_overflow__CWxoP\",\"telNumber\":\"ContactList_telNumber__ZK4b3\",\"deleteContactBtn\":\"ContactList_deleteContactBtn__PWCBT\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n\nexport const getFilterValue = state => state.contacts.filters.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilterValue],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(\n      contact =>\n        contact.name && contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return visibleContacts;\n  }\n);\n","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/contactsFetchApi';\nimport { selectVisibleContacts } from 'redux/filter/filterSelectors';\nimport { useContact } from 'hook';\nimport Loader from 'components/Loader';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { contacts, isLoading, error } = useContact();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      {isLoading && <Loader />}\n      {contacts && (\n        <ul className={css.contactList}>\n          {visibleContacts.map(({ id, name, number }) => {\n            return (\n              <li key={id} className={css.contactItem}>\n                <div>\n                  <p className={css.overflow}>{name}:</p>\n                  <p className={css.telNumber}>{number}</p>\n                </div>\n                <button\n                  className={css.deleteContactBtn}\n                  type=\"button\"\n                  onClick={() => onDeleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__Eg+6p\",\"titleContacts\":\"Contacts_titleContacts__COZE6\"};","import PropTypes from 'prop-types';\nimport css from './Contacts.module.css';\n\nconst Contacts = ({ title, children }) => {\n  return (\n    <section className={css.contacts}>\n      <h2 className={css.titleContacts}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Contacts;\n\nContacts.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from '../../sharedStyles.module.css';\nimport { contactsFiltered } from 'redux/filter/filterSlice';\nimport { getFilterValue } from 'redux/filter/filterSelectors';\n\nconst Filter = () => {\n  const filter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const filterContacts = e => {\n    const { value } = e.currentTarget;\n    dispatch(contactsFiltered(value));\n  };\n  return (\n    <div className={css.formContainer}>\n      <label className={css.formLabel}>\n        <p>Find contacts by name</p>\n        <input\n          className={css.formInput}\n          type=\"text\"\n          value={filter}\n          onChange={filterContacts}\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"phoneBook\":\"PhoneBook_phoneBook__MUL+r\",\"title\":\"PhoneBook_title__QJwXO\",\"titleEnd\":\"PhoneBook_titleEnd__aACpB\"};","import PropTypes from 'prop-types';\nimport css from './PhoneBook.module.css';\n\nconst PhoneBook = ({ titleBegin, titleEnd, children }) => {\n  return (\n    <section className={css.phoneBook}>\n      <h1 className={css.title}>\n        {titleBegin}\n        <span className={css.titleEnd}>{titleEnd}</span>\n      </h1>\n      {children}\n    </section>\n  );\n};\n\nexport default PhoneBook;\n\nPhoneBook.propTypes = {\n  titleBegin: PropTypes.string.isRequired,\n  titleEnd: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Contacts from 'components/Contacts';\nimport Filter from 'components/Filter';\nimport PhoneBook from 'components/PhoneBook';\n\nconst ContactsPage = () => {\n  return (\n    <PhoneBook titleBegin=\"Phone\" titleEnd=\"Book\">\n      <ContactForm />\n      <Contacts title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Contacts>\n    </PhoneBook>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useContact","dispatch","useDispatch","handleChange","e","_e$currentTarget","currentTarget","value","reset","_jsxs","className","css","onSubmit","preventDefault","some","contact","toLowerCase","alert","concat","addContact","children","_jsx","type","onChange","pattern","title","required","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getFilterValue","state","filters","filter","selectVisibleContacts","getContacts","normalizedFilter","includes","_useContact","isLoading","error","visibleContacts","useSelector","useEffect","fetchContacts","_Fragment","Loader","_ref","id","onClick","deleteContact","onDeleteContact","contactsFiltered","titleBegin","titleEnd","PhoneBook","ContactForm","Contacts","Filter","ContactList"],"sourceRoot":""}