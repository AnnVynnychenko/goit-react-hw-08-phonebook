{"version":3,"file":"static/js/221.c0efdde2.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","redux/auth/authFetchApi.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authFetchApi';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, email, password } = e.currentTarget.elements;\n    dispatch(\n      register({\n        name: name.value,\n        email: email.value,\n        password: password.value,\n      })\n    );\n    e.currentTarget.reset();\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n\n// export const RegisterForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     dispatch(\n//       register({\n//         name: form.elements.name.value,\n//         email: form.elements.email.value,\n//         password: form.elements.password.value,\n//       })\n//     );\n//     form.reset();\n//   };\n","import RegisterForm from 'components/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\nexport default RegisterPage;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\n// const clearAuthHeader = () => {\n//   axios.defaults.headers.common.Authorization = '';\n// };\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (userData, thunkAPI) => {\n    try {\n      const response = await axios.post('users/signup', userData);\n      setAuthHeader(response.data.token);\n      console.log('esponse.data', response.data);\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (userData, thunkAPI) => {\n    try {\n      const response = await axios.post('users/login', userData);\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logout = createAsyncThunk(\n  'auth/logout',\n  async (userData, thunkAPI) => {\n    try {\n      const response = await axios.post('users/login', userData);\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// /*\n//  * POST @ /users/login\n//  * body: { email, password }\n//  */\n// export const logIn = createAsyncThunk(\n//   'auth/login',\n//   async (credentials, thunkAPI) => {\n//     try {\n//       const res = await axios.post('/users/login', credentials);\n//       // After successful login, add the token to the HTTP header\n//       setAuthHeader(res.data.token);\n//       return res.data;\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue(error.message);\n//     }\n//   }\n// );\n\n// /*\n//  * POST @ /users/logout\n//  * headers: Authorization: Bearer token\n//  */\n// export const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n//   try {\n//     await axios.post('/users/logout');\n//     // After a successful logout, remove the token from the HTTP header\n//     clearAuthHeader();\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message);\n//   }\n// });\n\n// /*\n//  * GET @ /users/current\n//  * headers: Authorization: Bearer token\n//  */\n// export const refreshUser = createAsyncThunk(\n//   'auth/refresh',\n//   async (_, thunkAPI) => {\n//     // Reading the token from the state via getState()\n//     const state = thunkAPI.getState();\n//     const persistedToken = state.auth.token;\n\n//     if (persistedToken === null) {\n//       // If there is no token, exit without performing any request\n//       return thunkAPI.rejectWithValue('Unable to fetch user');\n//     }\n\n//     try {\n//       // If there is a token, add it to the HTTP header and perform the request\n//       setAuthHeader(persistedToken);\n//       const res = await axios.get('/users/me');\n//       return res.data;\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue(error.message);\n//     }\n//   }\n// );\n"],"names":["dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","_e$currentTarget$elem","currentTarget","elements","name","email","password","register","value","reset","children","_jsx","type","_Fragment","RegisterForm","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","axios","setAuthHeader","token","concat","createAsyncThunk","_x","_x2","_ref","_asyncToGenerator","_callee","userData","thunkAPI","response","_context","data","console","log","t0","rejectWithValue","message","apply","arguments","login","_x3","_x4","_ref2","_callee2","_context2","_x5","_x6","_ref3","_callee3","_context3"],"sourceRoot":""}